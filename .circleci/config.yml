version: 2.1

jobs:
  release:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
        environment:
          DOCKER_USERNAME: 'robot$circleci'
    steps:
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: "Tag released image"
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD harbor.dsrd.libraries.psu.edu
            docker pull harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$CIRCLE_SHA1
            docker tag harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$CIRCLE_SHA1 harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$CIRCLE_TAG
            docker push harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$CIRCLE_TAG

  argocd_qa:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
    steps:
    - add_ssh_keys
    - run:
        name: Update ArgoCD
        command: |
          ssh-keyscan github.com > ~/.ssh/known_hosts
          git clone git@github.com:psu-stewardship/psu-authproxy-config.git
          cd psu-authproxy-config
          ./generate_application.sh


  argocd_dev:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
    steps:
    - add_ssh_keys
    - run:
        name: Update ArgoCD
        command: |
          ssh-keyscan github.com > ~/.ssh/known_hosts
          git clone git@github.com:psu-stewardship/psu-authproxy-config.git
          cd psu-authproxy-config
          ./generate_application.sh

  build:
    docker: 
      - image: tmaier/docker-compose:latest
        environment:
          DOCKER_USERNAME: 'robot$circleci'
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - checkout
      - run: 
          name: Start Dependencies
          command: | 
              docker-compose up -d db
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: Build Image
          command: |
            docker build -t harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$CIRCLE_SHA1 .
      - run:
          name: Niftany
          command: |
            export TAG=${CIRCLE_SHA1}
            docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=niftany test /app/bin/ci-niftany
      - run: 
          name: Test
          command: |
            export TAG=${CIRCLE_SHA1}
            docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=test --service-ports test /app/bin/ci-rspec
            docker cp test:/app/coverage . 
            docker cp test:/app/vendor . 
      - save_cache:
          paths:
            - vendor/bundle
          key: bundle-{{ checksum "Gemfile.lock" }}
      - store_test_results:
          path: coverage
      - run:
          name: Push the Container
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD harbor.dsrd.libraries.psu.edu
            docker push harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$CIRCLE_SHA1 


workflows:
  version: 2
  psu-authproxy:
    jobs:

      - build

      - release:
          filters:
            branches:
              ignore: /.*/ 
            tags:
              only:
                - /.*/

      - argocd_qa:
          requires:
            - release
          filters:
            branches:
              only:
                - develop
            tags:
              only:
                - /.*/


      - argocd_dev:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - /preview\/.*/
            tags:
              only:
                - /.*/

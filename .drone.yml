---
kind: pipeline
name: default


steps:
- name: build
  image: docker
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - pull_request
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker build -t harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_BUILD_NUMBER --target base . 
    - docker build -t harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_BUILD_NUMBER-rspec --target rspec . 
  volumes:
  - name: docker-sock
    path: /var/run/host.sock

- name: rspec
  image: docker
  volumes:
  - name: docker-sock
    path: /var/run/host.sock
  user: root
  environment:
    RAILS_ENV: test
    POSTGRES_USER: authproxy
    POSTGRES_DB: authproxy
    OIDC_ISSUER: localhost
    OIDC_SIGNING_KEY:
      from_secret: oidc_signing_key
    POSTGRES_PASSWORD: authproxy
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - apk add bind-tools
    - export POSTGRES_HOST=$(dig +short postgres)
    - docker run 
      --net host
      -e POSTGRES_HOST=$POSTGRES_HOST
      -e POSTGRES_USER=authproxy
      -e POSTGRES_PASSWORD=authproxy
      -e OIDC_SIGNING_KEY=$OIDC_SIGNING_KEY
      -e OIDC_ISSUER=$OIDC_ISSUER
      -e POSTGRES_DB=authproxy
      harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_BUILD_NUMBER-rspec

- name: push-tag
  image: docker
  volumes:
    - name: docker-sock
      path: /var/run/host.sock
  when:
    event:
      include: 
        - tag
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker build -t harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_TAG --target production . 
    - docker login -u 'robot$drone' -p $DOCKER_PASSWORD harbor.dsrd.libraries.psu.edu
    - docker push harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_TAG

- name: push 
  image: docker
  volumes:
  - name: docker-sock
    path: /var/run/host.sock
  when:
    event:
      exclude:
      - pull_request
      - tag
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker build -t harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_BUILD_NUMBER --target production . 
    - docker login -u 'robot$drone' -p $DOCKER_PASSWORD harbor.dsrd.libraries.psu.edu
    - docker push harbor.dsrd.libraries.psu.edu/library/psu-authproxy:$DRONE_BUILD_NUMBER

# - name: update ArgoCD (prod)
#   image: alpine/git
#   environment:
#     CONFIG_ENV: prod
#   when:
#     branch:
#       include:
#         - master
#     event:
#       exclude:
#       - pull_request
#       - tag
#   commands:
#     - git clone https://github.com/psu-stewardship/psu-authproxy-config.git
#     - cd psu-authproxy-config
#     - ./generate_application.sh

- name: update ArgoCD (qa)
  image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
  environment:
    CONFIG_ENV: qa
    REPLICA_COUNT: 2
    ARGOCD_SERVER: argocd.dsrd.libraries.psu.edu
    SLACK_WEBHOOK_URL:
      from_secret: SLACK_WEBHOOK_URL
    ARGOCD_AUTH_TOKEN:
      from_secret: ARGOCD_AUTH_TOKEN
  when:
    event:
      include:
      - tag
  commands:
    - git clone https://github.com/psu-stewardship/psu-authproxy-config.git
    - cd psu-authproxy-config
    - ./generate_application.sh

- name: update ArgoCD (dev)
  image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
  environment:
    CONFIG_ENV: dev
    ARGOCD_SERVER: argocd.dsrd.libraries.psu.edu
    SLACK_WEBHOOK_URL:
      from_secret: SLACK_WEBHOOK_URL
    ARGOCD_AUTH_TOKEN:
      from_secret: ARGOCD_AUTH_TOKEN
  when:
    branch:
      include:
        - preview/*
        - develop
    event:
      exclude:
      - pull_request
      - tag
  commands:
    - git clone https://github.com/psu-stewardship/psu-authproxy-config.git
    - cd psu-authproxy-config
    - ./generate_application.sh

services:
- name: postgres
  image: postgres:10
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - pull_request
  environment:
    POSTGRES_PASSWORD: authproxy
    POSTGRES_USER: authproxy
    POSTGRES_DB: authproxy
  
volumes:
- name: docker-sock
  host:
    path: /var/run/docker.sock
---
kind: signature
hmac: 2ef1b4f7bfd02a799a86a3be556d312af3638120e89129c45e85a0df8d5685f0

...
